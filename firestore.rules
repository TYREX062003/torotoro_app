rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }
    function isAdmin()   { return isSignedIn() && request.auth.token.role == 'admin'; }
    function isOwner(uid){ return isSignedIn() && request.auth.uid == uid; }

    // ✅ Habilita lecturas de collectionGroup('comments') SOLO para admins
    match /{path=**}/comments/{commentId} {
      allow read: if isAdmin();   // NO write aquí
    }

    // --------- CATEGORÍAS ----------
    match /categories/{catId} {
      allow read: if true;
      allow write: if isAdmin();

      match /comments/{commentId} {
        allow read: if isAdmin() || isOwner(commentId);
        allow create: if isSignedIn()
                      && request.resource.id == request.auth.uid
                      && request.resource.data.userId == request.auth.uid;
        allow update: if isOwner(commentId)
                      && request.resource.data.userId == request.auth.uid
                      && request.resource.data.diff(resource.data)
                           .changedKeys().hasOnly(['text','rating','updatedAt']);
        allow update, delete: if isAdmin();
      }
    }

    // --------- POIs ----------
    match /pois/{poiId} {
      allow read: if true;
      allow write: if isAdmin();

      match /comments/{commentId} {
        allow read, write, update, delete: if isAdmin();
      }
    }

    // --------- USERS / FAVORITES ----------
    match /users/{uid} {
      allow read, write: if isOwner(uid);
      match /favorites/{docId} {
        allow read, write: if isOwner(uid);
        match /items/{itemId} {
          allow read, write: if isOwner(uid);
        }
      }
    }

    // Fallback
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
